name: deploy sk-pjt2-chat server
on:
  push:
    branches:
      - main
jobs:
  set-docker:
    runs-on: ubuntu-latest
    steps:
      # code checkout
      - name: code checkout
        uses: actions/checkout@v4

      - name: install jdk17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: docker action
        uses: docker/setup-buildx-action@v3

      - name: login docker hub with token
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_NAME }}" --password-stdin

  run-docker:
    runs-on: ubuntu-latest
    needs: set-docker
    steps:
      - name: Run Docker
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script_stop: true
          script: |
            sudo docker compose down
            sudo docker compose up -d

  deploy:
    runs-on: ubuntu-latest
    needs: run-docker
    steps:
      - name: Github Repostiory checkout
        uses: actions/checkout@v4

      - name: Install JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Create Yml file
        run: |
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties
          ls ./src/main/resources

      - name: Build jar
        run: |
          chmod +x ./gradlew 
          ./gradlew clean build
          pwd
          ls
          ls ./build/libs

      - name: Rename jar
        run: |
          mv ./build/libs/*SNAPSHOT.jar ./run.jar
          ls

      - name: Upload jar to EC2 server
        uses: appleboy/scp-action@v0.1.7
        # with: uses의 parameter
        # ssh의 port를 22번이 아닌 다른 것으로 바꾸면 port: ${{secrets.PORT}} 설정 필요
        # target의 서버 경로에 경로가 자동생성되는지 확인해야함
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: run.jar
          target: /home/ubuntu/server/demo

      - name: Run jar in EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script_stop: true
          script: |
            rm -rf /home/ubuntu/server/web
            mkdir /home/ubuntu/server/web
            mv /home/ubuntu/server/demo/run.jar /home/ubuntu/server/web/run.jar
            cd /home/ubuntu/server/web
            sudo fuser -k -n tcp 8080 || true
            nohup java -jar run.jar > ./output.log 2>&1 &
            rm -rf /home/ubuntu/server/demo